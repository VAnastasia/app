{"version":3,"sources":["components/search/search-icon.svg","views/main/down-icon.svg","components/logout/index.js","components/logout/logout.js","components/header/index.js","components/header/header.js","components/button/index.js","components/button/button.js","utils/utils.js","components/notes-list/index.js","components/notes-list/notes-list.js","components/search/index.js","components/search/search.js","components/note-details/index.js","components/note-details/note-details.js","components/spinner/index.js","components/spinner/spinner.js","views/main/index.js","views/main/main.js","views/welcome/index.js","views/welcome/welcome.js","components/field-form/index.js","components/field-form/field-form.js","views/auth/index.js","views/auth/auth.js","views/register/index.js","views/register/register.js","routes/routes.js","firebase/config.js","stores/notes.js","stores/users.js","index.js"],"names":["module","exports","Logout","onClickLogout","to","className","onClick","Header","userName","Button","type","title","dateFormat","Intl","DateTimeFormat","month","day","timeFormat","hour12","hour","minute","NotesList","arr","this","props","activeNote","onClickNote","map","id","date","noteClassName","key","format","formatDate","formatTime","notesUser","onClickAdd","items","renderItems","Component","Search","onSearch","placeholder","name","onChange","src","icon","alt","width","height","NoteDetails","onSubmitNote","onDeleteNote","text","noteDetailsClassName","method","onSubmit","defaultValue","value","Spinner","Main","inject","observer","state","sortDate","onSortDate","setState","notesStore","setActiveNote","writeNoteData","userStore","isAuth","Date","now","onSaveNote","updateNoteData","evt","preventDefault","target","deleteNote","clearNotes","getNotes","term","toLowerCase","filtredNotes","notes","slice","filter","note","indexOf","sort","a","b","isLoading","spinner","classNameButtonSort","length","img","Welcome","FieldForm","label","htmlFor","required","Auth","onSubmitAuth","Register","onSubmitRegister","isReg","exact","path","component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","NotesStore","ref","orderByChild","once","then","snapshot","forEach","obj","val","userId","localStorage","getItem","push","catch","error","errorMessage","message","alert","update","remove","decorate","observable","action","UserStore","user","email","document","forms","elements","registerlogin","password","registerpassword","registerUser","setUser","clear","signOut","login","signIn","auth","onAuthStateChanged","uid","setItem","createUserWithEmailAndPassword","signInWithEmailAndPassword","users","stores","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4066bb10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-icon.9df51d4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-icon.e35acbe6.svg\";","import Logout from \"./logout\";\nexport default Logout;\n","import React from \"react\";\nimport \"./logout.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Logout({ onClickLogout }) {\n  return (\n    <Link to=\"/\" className=\"logout\" onClick={onClickLogout}>\n      <span>Выйти</span>\n    </Link>\n  );\n}\n","import Header from \"./header\";\nexport default Header;\n","import React from \"react\";\nimport \"./header.css\";\nimport Logout from \"../../components/logout\";\n\nexport default function Header({ onClickLogout, userName }) {\n  return (\n    <header className=\"header\">\n      <nav>\n        <ul>\n          <li>{userName}</li>\n          <li>\n            <Logout onClickLogout={onClickLogout} />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import Button from \"./button\";\nexport default Button;\n","import React from \"react\";\nimport \"./button.css\";\n\nexport default function Button({ type, title, onClick }) {\n  return (\n    <button className=\"button\" type={type} onClick={onClick}>\n      {title}\n    </button>\n  );\n}\n","const dateFormat = new Intl.DateTimeFormat(`ru-RU`, {\n  month: `long`,\n  day: `numeric`\n});\n\nconst timeFormat = new Intl.DateTimeFormat(`ru-RU`, {\n  hour12: false,\n  hour: `numeric`,\n  minute: `numeric`\n});\n\nexport const formatDate = date => dateFormat.format(date);\nexport const formatTime = date => timeFormat.format(date);\n","import NotesList from \"./notes-list\";\nexport default NotesList;\n","import React, { Component } from \"react\";\nimport \"./notes-list.css\";\nimport Button from \"../../components/button\";\nimport { formatDate, formatTime } from \"../../utils/utils\";\n\nexport default class NotesList extends Component {\n  renderItems(arr) {\n    const { activeNote, onClickNote } = this.props;\n\n    return arr.map(({ id, title, date }) => {\n      const noteClassName =\n        activeNote === id ? \"notes-item active\" : \"notes-item\";\n      return (\n        <li className={noteClassName} key={id} onClick={() => onClickNote(id)}>\n          {title}\n          <p>\n            {formatDate(date)} {formatTime(date)}\n          </p>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { notesUser, onClickAdd } = this.props;\n    const items = this.renderItems(notesUser);\n\n    return (\n      <div>\n        <ul className=\"notes-list\">{items}</ul>\n        <Button\n          type={\"button\"}\n          title={\"Создать заметку\"}\n          onClick={onClickAdd}\n        />\n      </div>\n    );\n  }\n}\n","import Search from \"./search\";\nexport default Search;\n","import React from \"react\";\nimport \"./search.css\";\nimport icon from \"./search-icon.svg\";\n\nexport default function Search({ onSearch }) {\n  return (\n    <div className=\"search\">\n      <input\n        type=\"text\"\n        placeholder=\"Поиск\"\n        name=\"search\"\n        onChange={onSearch}\n      />\n      <button type=\"button\">\n        <img\n          src={icon}\n          alt=\"search\"\n          width=\"20\"\n          height=\"20\"\n          className=\"search__icon\"\n        />\n      </button>\n    </div>\n  );\n}\n","import NoteDetails from \"./note-details\";\nexport default NoteDetails;\n","import React, { Component } from \"react\";\nimport \"./note-details.css\";\nimport Button from \"../button\";\n\nexport default class NoteDetails extends Component {\n  renderItems(arr) {\n    const { activeNote, onSubmitNote, onDeleteNote } = this.props;\n\n    return arr.map(({ id, title, text }) => {\n      const noteDetailsClassName =\n        activeNote === id ? \"note-details active\" : \"note-details\";\n\n      return (\n        <form\n          className={noteDetailsClassName}\n          method=\"post\"\n          key={id}\n          onSubmit={onSubmitNote}\n        >\n          <input type=\"text\" name=\"title\" defaultValue={title} />\n          <textarea name=\"text\" defaultValue={text}></textarea>\n          <input type=\"hidden\" value={id} name=\"id\" />\n          <div className=\"note-details__buttons\">\n            <Button type=\"submit\" title=\"Сохранить\" />\n            <Button\n              type=\"button\"\n              title=\"Удалить\"\n              onClick={() => onDeleteNote(id)}\n            />\n          </div>\n        </form>\n      );\n    });\n  }\n\n  render() {\n    const notesUser = this.props.notesUser;\n\n    return (\n      <div className=\"note-details__container\">\n        {this.renderItems(notesUser)}\n      </div>\n    );\n  }\n}\n","import Spinner from \"./spinner\";\nexport default Spinner;\n","import React from \"react\";\nimport \"./spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"lds-css ng-scope\">\n        <div className=\"lds-spinner\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import Main from \"./main\";\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./main.css\";\nimport Header from \"../../components/header\";\nimport NotesList from \"../../components/notes-list\";\nimport Search from \"../../components/search\";\nimport NoteDetails from \"../../components/note-details\";\nimport Spinner from \"../../components/spinner\";\nimport img from \"./down-icon.svg\";\n\nimport { observer, inject } from \"mobx-react\";\n\nexport default inject(\n  \"userStore\",\n  \"notesStore\"\n)(\n  observer(\n    class Main extends Component {\n      state = {\n        sortDate: true\n      };\n\n      onSortDate = () => {\n        this.setState({\n          sortDate: !this.state.sortDate\n        });\n      };\n\n      onClickNote = id => {\n        this.props.notesStore.setActiveNote(id);\n      };\n\n      onClickAdd = () => {\n        this.props.notesStore.writeNoteData(\n          this.props.userStore.isAuth,\n          \"Новая заметка\",\n          \"\",\n          Date.now()\n        );\n      };\n\n      onSaveNote = (title, text, id) => {\n        this.props.notesStore.updateNoteData(title, text, id);\n      };\n\n      onSubmitNote = evt => {\n        evt.preventDefault();\n\n        this.onSaveNote(\n          evt.target.title.value,\n          evt.target.text.value,\n          evt.target.id.value\n        );\n      };\n\n      onDeleteNote = id => {\n        this.props.notesStore.deleteNote(id);\n      };\n\n      onClickLogout = () => {\n        this.props.userStore.onClickLogout();\n        this.props.notesStore.clearNotes();\n      };\n\n      onSearch = evt => {\n        evt.preventDefault();\n\n        if (!evt.target.value) {\n          this.props.notesStore.getNotes();\n        }\n\n        const term = evt.target.value.toLowerCase();\n\n        const filtredNotes = this.props.notesStore.notes\n          .slice()\n          .filter(note => {\n            return (\n              note.title.toLowerCase().indexOf(term) > -1 ||\n              note.text.toLowerCase().indexOf(term) > -1\n            );\n          });\n\n        return this.props.notesStore.onSearch(filtredNotes);\n      };\n\n      getNotes() {\n        const notes = this.props.notesStore.notes;\n        let notesUser = notes.slice().sort((a, b) => b.date - a.date);\n\n        if (this.state.sortDate) {\n          notesUser = notes.slice().sort((a, b) => b.date - a.date);\n        }\n\n        if (!this.state.sortDate) {\n          notesUser = notes.slice().sort((a, b) => a.date - b.date);\n        }\n\n        return notesUser;\n      }\n\n      componentDidMount() {\n        this.props.notesStore.getNotes();\n      }\n\n      componentDidUpdate() {\n        this.getNotes();\n      }\n\n      render() {\n        const { isAuth, userName } = this.props.userStore;\n        const { isLoading, activeNote } = this.props.notesStore;\n\n        const spinner = isLoading ? <Spinner /> : null;\n\n        const classNameButtonSort = this.state.sortDate\n          ? \"main__sort down\"\n          : \"main__sort up\";\n\n        return (\n          <div className=\"main\">\n            <Header\n              onClickLogout={this.onClickLogout}\n              isAuth={isAuth}\n              userName={userName}\n            />\n            <main>\n              <div className=\"main__left-column\">\n                <h1>\n                  Все заметки\n                  <sup>{this.getNotes().length}</sup>\n                </h1>\n                <button\n                  className={classNameButtonSort}\n                  onClick={this.onSortDate}\n                  title=\"Сортировка по дате\"\n                >\n                  <img src={img} width=\"16\" height=\"16\" alt=\"up-down\" />\n                </button>\n                <Search onSearch={this.onSearch} />\n                <NotesList\n                  activeNote={activeNote}\n                  onClickNote={this.onClickNote}\n                  notesUser={this.getNotes()}\n                  onClickAdd={this.onClickAdd}\n                />\n              </div>\n              <div className=\"main__right-column\">\n                <NoteDetails\n                  notesUser={this.getNotes()}\n                  activeNote={activeNote}\n                  onSaveNote={this.onSaveNote}\n                  onSubmitNote={this.onSubmitNote}\n                  onDeleteNote={this.onDeleteNote}\n                />\n              </div>\n            </main>\n            {spinner}\n          </div>\n        );\n      }\n    }\n  )\n);\n","import Welcome from \"./welcome\";\nexport default Welcome;\n","import React from \"react\";\nimport \"./welcome.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Welcome() {\n  return (\n    <section className=\"welcome\">\n      <h1>Заметки</h1>\n      <p>Веб-приложение для хранения заметок</p>\n      <div>\n        <Link to=\"/auth\">Войти</Link>\n        <Link to=\"/register\">Зарегистрироваться</Link>\n      </div>\n    </section>\n  );\n}\n","import FieldForm from \"./field-form\";\nexport default FieldForm;","import React from \"react\";\nimport \"./field-form.css\";\n\nexport default function FieldForm({ type, id, name, label }) {\n  return (\n    <p className=\"field-form\">\n      <label htmlFor={id}>{label}</label>\n      <input type={type} id={id} name={name} required></input>\n    </p>\n  );\n}\n","import Auth from \"./auth\";\nexport default Auth;\n","import React from \"react\";\nimport \"./auth.css\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../../components/button\";\nimport FieldForm from \"../../components/field-form\";\n\nexport default function Auth({ onSubmitAuth }) {\n  return (\n    <form className=\"auth\" method=\"post\" onSubmit={onSubmitAuth}>\n      <h1>Вход</h1>\n      <FieldForm type=\"text\" id=\"auth-login\" name=\"login\" label=\"E-mail\" />\n      <FieldForm\n        type=\"password\"\n        id=\"auth-password\"\n        name=\"password\"\n        label=\"Пароль\"\n      />\n      <Button type=\"submit\" title=\"Войти\" />\n      <p className=\"bottom\">\n        Еще нет аккаунта?\n        <Link to=\"/register\">Зарегистрироваться</Link>\n      </p>\n    </form>\n  );\n}\n","import Register from \"./register\";\nexport default Register;\n","import React from \"react\";\nimport \"./register.css\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../../components/button\";\nimport FieldForm from \"../../components/field-form\";\n\nexport default function Register({ onSubmitRegister }) {\n  return (\n    <form className=\"register\" method=\"post\" onSubmit={onSubmitRegister}>\n      <h1>Регистрация</h1>\n      <FieldForm type=\"text\" id=\"registerlogin\" label=\"E-mail\" />\n      <FieldForm type=\"password\" id=\"registerpassword\" label=\"Пароль\" />\n\n      <Button type=\"submit\" title=\"Зарегистрироваться\" />\n\n      <p className=\"bottom\">\n        Уже есть аккаунт?\n        <Link to=\"/auth\">Войти</Link>\n      </p>\n    </form>\n  );\n}\n","import React, { Component } from \"react\";\nimport Main from \"../views/main\";\nimport Welcome from \"../views/welcome\";\nimport Auth from \"../views/auth\";\nimport Register from \"../views/register\";\n\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { observer, inject } from \"mobx-react\";\n\nexport default inject(\n  \"userStore\",\n  \"notesStore\"\n)(\n  observer(\n    class Routes extends Component {\n      render() {\n        const {\n          isAuth,\n          isReg,\n          onSubmitAuth,\n          onSubmitRegister\n        } = this.props.userStore;\n\n        const screen = () => (isAuth ? <Main /> : <Welcome />);\n        const auth = () =>\n          isAuth ? <Redirect to=\"/\" /> : <Auth onSubmitAuth={onSubmitAuth} />;\n        const register = () =>\n          isReg ? (\n            <Redirect to=\"/auth\" />\n          ) : (\n            <Register onSubmitRegister={onSubmitRegister} />\n          );\n\n        return (\n          <BrowserRouter>\n            <Route exact path=\"/\" component={screen} />\n            <Route path=\"/auth\" component={auth} />\n            <Route path=\"/register\" component={register} />\n          </BrowserRouter>\n        );\n      }\n    }\n  )\n);\n","import firebase from \"firebase/app\";\n//import firestore from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport \"firebase/messaging\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCTaiom0f9oFcpAFmI3tmZk3w22wMNJHWs\",\n  authDomain: \"my-project-1555925309327.firebaseapp.com\",\n  databaseURL: \"https://my-project-1555925309327.firebaseio.com\",\n  projectId: \"my-project-1555925309327\",\n  storageBucket: \"my-project-1555925309327.appspot.com\",\n  messagingSenderId: \"423298676480\",\n  appId: \"1:423298676480:web:185d2a3464b7520d5525e5\",\n  measurementId: \"G-JTVC7LB6LX\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\n","import { observable, action, decorate } from \"mobx\";\nimport firebase from \"firebase/app\";\nimport \"../firebase/config\";\n\nconst database = firebase.database();\n\nclass NotesStore {\n  notes = [];\n  activeNote = null;\n  isLoading = true;\n\n  setActiveNote = id => {\n    //localStorage.setItem(\"isEditing\", id);\n    this.activeNote = id;\n  };\n\n  clearNotes = () => (this.notes = []);\n\n  onSearch = filtredNotes => {\n    this.notes = filtredNotes;\n  };\n\n  getNotes() {\n    this.isLoading = true;\n    database\n      .ref(\"notes/\")\n      .orderByChild(\"date\")\n      .once(\"value\")\n      .then(snapshot => {\n        this.notes = [];\n        snapshot.forEach(obj => {\n          if (obj.val().userId === localStorage.getItem(\"user_id\")) {\n            const note = obj.val();\n            note.id = obj.key;\n            this.notes.push(note);\n          }\n        });\n\n        this.isLoading = false;\n        this.activeNote =\n          this.notes.length > 0 ? this.notes[this.notes.length - 1].id : null;\n      })\n      .catch(error => {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n  }\n\n  writeNoteData(userId, title, text, date) {\n    firebase\n      .database()\n      .ref(\"notes/\")\n      .push({\n        userId: userId,\n        title: title,\n        text: text,\n        date: date\n      })\n      .catch(error => {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n\n    this.getNotes();\n  }\n\n  updateNoteData(title, text, id) {\n    firebase\n      .database()\n      .ref(\"notes/\" + id)\n      .update({\n        title: title,\n        text: text,\n        date: Date.now()\n      })\n      .catch(error => {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n\n    this.getNotes();\n  }\n\n  deleteNote(id) {\n    firebase\n      .database()\n      .ref(\"notes/\" + id)\n      .remove()\n      .catch(error => {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n\n    this.getNotes();\n  }\n}\n\ndecorate(NotesStore, {\n  notes: observable,\n  isLoading: observable,\n  activeNote: observable,\n  clearNotes: action,\n  setActiveNote: action,\n  getNotes: action\n});\n\nconst notesStore = new NotesStore();\nexport { notesStore };\n","import { observable, action, decorate } from \"mobx\";\nimport firebase from \"firebase/app\";\nimport \"../firebase/config\";\n\nclass UserStore {\n  isAuth = localStorage.getItem(\"user_id\")\n    ? localStorage.getItem(\"user_id\")\n    : null;\n  isReg = false;\n  userName = localStorage.getItem(\"user_name\")\n    ? localStorage.getItem(\"user_name\")\n    : \"\";\n\n  async registerUser({ email, password }) {\n    const user = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(error => {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n\n    if (user) {\n      this.isReg = true;\n    }\n  }\n\n  onSubmitRegister = evt => {\n    evt.preventDefault();\n\n    const user = {\n      email: document.forms[0].elements.registerlogin.value,\n      password: document.forms[0].elements.registerpassword.value\n    };\n\n    this.registerUser(user);\n  };\n\n  setUser = id => {\n    this.isAuth = id;\n  };\n\n  onClickLogout = () => {\n    this.isAuth = null;\n    this.userName = \"\";\n    this.isReg = false;\n    localStorage.clear();\n\n    this.signOut();\n  };\n\n  signOut() {\n    firebase\n      .auth()\n      .signOut()\n      .then(function() {\n        // Sign-out successful.\n      })\n      .catch(function(error) {\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n  }\n\n  signIn({ email, password }) {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        this.isAuth = null;\n        this.userName = \"\";\n        localStorage.clear();\n        const errorMessage = error.message;\n        alert(errorMessage);\n      });\n  }\n\n  onSubmitAuth = evt => {\n    evt.preventDefault();\n    const user = {\n      email: document.forms[0].elements.login.value,\n      password: document.forms[0].elements.password.value\n    };\n\n    this.signIn(user);\n\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.isAuth = user.uid;\n        this.userName = user.email;\n        localStorage.setItem(\"user_id\", user.uid);\n        localStorage.setItem(\"user_name\", user.email);\n      } else {\n        this.isAuth = null;\n        this.userName = \"\";\n      }\n    });\n  };\n}\n\ndecorate(UserStore, {\n  users: observable,\n  isAuth: observable,\n  isReg: observable,\n  userName: observable,\n  errorMessage: observable,\n  setUser: action,\n  onClickLogout: action,\n  onSubmitAuth: action\n});\n\nconst userStore = new UserStore();\n\nexport { userStore };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./routes/routes\";\nimport { notesStore } from \"./stores/notes\";\nimport { userStore } from \"./stores/users\";\nimport { Provider } from \"mobx-react\";\n\nconst stores = { notesStore, userStore };\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Routes />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}